{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/dasch/Desktop/meetApp/client/src/features/auth/authSlice.js"],"sourcesContent":["\r\n// src/features/auth/authSlice.js\r\n'use client';\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  users: [\r\n    { email: 'admin@company.com', password: '123', role: 'admin', name: 'Admin User', token: 'adminToken123' },\r\n    { email: 'daschinmaya260@gmail.com', password: '123', role: 'hr', name: 'HR User', token: 'hrToken123' },\r\n    { email: 'cpc@company.com', password: '123', role: 'cpc', name: 'CPC User', token: 'cpcToken123' },\r\n    { email: 'md@company.com', password: 'md123', role: 'md', name: 'MD User', token: 'mdToken123' },\r\n    { email: 'chairman@company.com', password: 'chairman123', role: 'chairman', name: 'Chairman User', token: 'chairmanToken123' },\r\n  ],\r\n  currentUser: null,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.currentUser = action.payload;\r\n      // Optionally store user info or token in localStorage or sessionStorage if needed\r\n      // localStorage.setItem('authToken', action.payload.token);\r\n    },\r\n    logout: (state) => {\r\n      state.currentUser = null;\r\n      // Clear all session-related data\r\n      localStorage.clear();  // Clears all items in localStorage\r\n      sessionStorage.clear();  // Clears all items in sessionStorage\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n"],"names":[],"mappings":"AACA,iCAAiC;;;;;;AAEjC;AADA;;AAGA,MAAM,eAAe;IACnB,OAAO;QACL;YAAE,OAAO;YAAqB,UAAU;YAAO,MAAM;YAAS,MAAM;YAAc,OAAO;QAAgB;QACzG;YAAE,OAAO;YAA4B,UAAU;YAAO,MAAM;YAAM,MAAM;YAAW,OAAO;QAAa;QACvG;YAAE,OAAO;YAAmB,UAAU;YAAO,MAAM;YAAO,MAAM;YAAY,OAAO;QAAc;QACjG;YAAE,OAAO;YAAkB,UAAU;YAAS,MAAM;YAAM,MAAM;YAAW,OAAO;QAAa;QAC/F;YAAE,OAAO;YAAwB,UAAU;YAAe,MAAM;YAAY,MAAM;YAAiB,OAAO;QAAmB;KAC9H;IACD,aAAa;AACf;AAEA,MAAM,YAAY,CAAA,GAAA,2LAAA,CAAA,cAAW,AAAD,EAAE;IAC5B,MAAM;IACN;IACA,UAAU;QACR,OAAO,CAAC,OAAO;YACb,MAAM,WAAW,GAAG,OAAO,OAAO;QAClC,kFAAkF;QAClF,2DAA2D;QAC7D;QACA,QAAQ,CAAC;YACP,MAAM,WAAW,GAAG;YACpB,iCAAiC;YACjC,aAAa,KAAK,IAAK,mCAAmC;YAC1D,eAAe,KAAK,IAAK,qCAAqC;QAChE;IACF;AACF;AAEO,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,UAAU,OAAO;uCACnC,UAAU,OAAO"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/dasch/Desktop/meetApp/client/src/features/gridViewSlice.js"],"sourcesContent":["// src/redux/gridViewSlice.js\r\n\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  isGridView: true, // Default value for the view\r\n};\r\n\r\nconst gridViewSlice = createSlice({\r\n  name: 'gridView',\r\n  initialState,\r\n  reducers: {\r\n    toggleGridView: (state) => {\r\n      state.isGridView = !state.isGridView;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { toggleGridView } = gridViewSlice.actions;\r\nexport default gridViewSlice.reducer;\r\n"],"names":[],"mappings":"AAAA,6BAA6B;;;;;AAE7B;;AAEA,MAAM,eAAe;IACnB,YAAY;AACd;AAEA,MAAM,gBAAgB,CAAA,GAAA,2LAAA,CAAA,cAAW,AAAD,EAAE;IAChC,MAAM;IACN;IACA,UAAU;QACR,gBAAgB,CAAC;YACf,MAAM,UAAU,GAAG,CAAC,MAAM,UAAU;QACtC;IACF;AACF;AAEO,MAAM,EAAE,cAAc,EAAE,GAAG,cAAc,OAAO;uCACxC,cAAc,OAAO"}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/dasch/Desktop/meetApp/client/src/features/note/noteSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\n// Base API URL\r\nconst API_URL = 'http://localhost:3000/notes';\r\n\r\n// Async thunk for fetching notes\r\nexport const fetchNotes = createAsyncThunk('notes/fetchNotes', async () => {\r\n  const response = await axios.get(API_URL);\r\n  return response.data.sort((a, b) => new Date(b.date) - new Date(a.date));\r\n});\r\n\r\n// Async thunk for creating a new note\r\nexport const createNote = createAsyncThunk('notes/createNote', async (newNote) => {\r\n  const response = await axios.post(API_URL, { ...newNote, id: Date.now() });\r\n  return response.data;\r\n});\r\n\r\n// Async thunk for updating a note\r\nexport const updateNote = createAsyncThunk('notes/updateNote', async ({ id, updatedNote }) => {\r\n  await axios.put(`${API_URL}/${id}`, updatedNote);\r\n  return { id, updatedNote };\r\n});\r\n\r\n// Async thunk for deleting a note\r\nexport const deleteNote = createAsyncThunk('notes/deleteNote', async (id) => {\r\n  await axios.delete(`${API_URL}/${id}`);\r\n  return id;\r\n});\r\n\r\n// Notes slice\r\nconst noteSlice = createSlice({\r\n  name: 'note',\r\n  initialState: {\r\n    notes: [],\r\n    status: 'idle',\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchNotes.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchNotes.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.notes = action.payload;\r\n      })\r\n      .addCase(fetchNotes.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message;\r\n      })\r\n      .addCase(createNote.fulfilled, (state, action) => {\r\n        state.notes.unshift(action.payload);\r\n      })\r\n      .addCase(updateNote.fulfilled, (state, action) => {\r\n        const { id, updatedNote } = action.payload;\r\n        const existingNote = state.notes.find((note) => note.id === id);\r\n        if (existingNote) {\r\n          Object.assign(existingNote, updatedNote);\r\n        }\r\n      })\r\n      .addCase(deleteNote.fulfilled, (state, action) => {\r\n        state.notes = state.notes.filter((note) => note.id !== action.payload);\r\n      });\r\n  },\r\n});\r\n\r\nexport default noteSlice.reducer;\r\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;;;AAEA,eAAe;AACf,MAAM,UAAU;AAGT,MAAM,aAAa,CAAA,GAAA,2LAAA,CAAA,mBAAgB,AAAD,EAAE,oBAAoB;IAC7D,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC;IACjC,OAAO,SAAS,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAM,IAAI,KAAK,EAAE,IAAI,IAAI,IAAI,KAAK,EAAE,IAAI;AACxE;AAGO,MAAM,aAAa,CAAA,GAAA,2LAAA,CAAA,mBAAgB,AAAD,EAAE,oBAAoB,OAAO;IACpE,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,SAAS;QAAE,GAAG,OAAO;QAAE,IAAI,KAAK,GAAG;IAAG;IACxE,OAAO,SAAS,IAAI;AACtB;AAGO,MAAM,aAAa,CAAA,GAAA,2LAAA,CAAA,mBAAgB,AAAD,EAAE,oBAAoB,OAAO,EAAE,EAAE,EAAE,WAAW,EAAE;IACvF,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,EAAE,IAAI,EAAE;IACpC,OAAO;QAAE;QAAI;IAAY;AAC3B;AAGO,MAAM,aAAa,CAAA,GAAA,2LAAA,CAAA,mBAAgB,AAAD,EAAE,oBAAoB,OAAO;IACpE,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC,EAAE,IAAI;IACrC,OAAO;AACT;AAEA,cAAc;AACd,MAAM,YAAY,CAAA,GAAA,2LAAA,CAAA,cAAW,AAAD,EAAE;IAC5B,MAAM;IACN,cAAc;QACZ,OAAO,EAAE;QACT,QAAQ;QACR,OAAO;IACT;IACA,UAAU,CAAC;IACX,eAAe,CAAC;QACd,QACG,OAAO,CAAC,WAAW,OAAO,EAAE,CAAC;YAC5B,MAAM,MAAM,GAAG;QACjB,GACC,OAAO,CAAC,WAAW,SAAS,EAAE,CAAC,OAAO;YACrC,MAAM,MAAM,GAAG;YACf,MAAM,KAAK,GAAG,OAAO,OAAO;QAC9B,GACC,OAAO,CAAC,WAAW,QAAQ,EAAE,CAAC,OAAO;YACpC,MAAM,MAAM,GAAG;YACf,MAAM,KAAK,GAAG,OAAO,KAAK,CAAC,OAAO;QACpC,GACC,OAAO,CAAC,WAAW,SAAS,EAAE,CAAC,OAAO;YACrC,MAAM,KAAK,CAAC,OAAO,CAAC,OAAO,OAAO;QACpC,GACC,OAAO,CAAC,WAAW,SAAS,EAAE,CAAC,OAAO;YACrC,MAAM,EAAE,EAAE,EAAE,WAAW,EAAE,GAAG,OAAO,OAAO;YAC1C,MAAM,eAAe,MAAM,KAAK,CAAC,IAAI,CAAC,CAAC,OAAS,KAAK,EAAE,KAAK;YAC5D,IAAI,cAAc;gBAChB,OAAO,MAAM,CAAC,cAAc;YAC9B;QACF,GACC,OAAO,CAAC,WAAW,SAAS,EAAE,CAAC,OAAO;YACrC,MAAM,KAAK,GAAG,MAAM,KAAK,CAAC,MAAM,CAAC,CAAC,OAAS,KAAK,EAAE,KAAK,OAAO,OAAO;QACvE;IACJ;AACF;uCAEe,UAAU,OAAO"}},
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/dasch/Desktop/meetApp/client/src/features/meeting/meetingSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\n// Base API URL\r\nconst API_URL = 'http://localhost:3000/meetings';\r\n\r\n// Async thunk for fetching meetings\r\nexport const fetchMeetings = createAsyncThunk('meetings/fetchMeetings', async () => {\r\n  const response = await axios.get(API_URL);\r\n  return response.data.sort((a, b) => new Date(b.date) - new Date(a.date));\r\n});\r\n\r\n// Async thunk for creating a new meeting\r\nexport const createMeeting = createAsyncThunk('meetings/createMeeting', async (newMeeting) => {\r\n  const response = await axios.post(API_URL, { ...newMeeting, id: Date.now() });\r\n  return response.data;\r\n});\r\n\r\n// Async thunk for updating a meeting\r\nexport const updateMeeting = createAsyncThunk('meetings/updateMeeting', async ({ id, updatedMeeting }) => {\r\n  await axios.put(`${API_URL}/${id}`, updatedMeeting);\r\n  return { id, updatedMeeting };\r\n});\r\n\r\n// Async thunk for deleting a meeting\r\nexport const deleteMeeting = createAsyncThunk('meetings/deleteMeeting', async (id) => {\r\n  await axios.delete(`${API_URL}/${id}`);\r\n  return id;\r\n});\r\n\r\n// Meetings slice\r\nconst meetingSlice = createSlice({\r\n  name: 'meeting',\r\n  initialState: {\r\n    meetings: [],\r\n    status: 'idle',\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchMeetings.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchMeetings.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.meetings = action.payload;\r\n      })\r\n      .addCase(fetchMeetings.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message;\r\n      })\r\n      .addCase(createMeeting.fulfilled, (state, action) => {\r\n        state.meetings.unshift(action.payload);\r\n      })\r\n      .addCase(updateMeeting.fulfilled, (state, action) => {\r\n        const { id, updatedMeeting } = action.payload;\r\n        const existingMeeting = state.meetings.find((meeting) => meeting.id === id);\r\n        if (existingMeeting) {\r\n          Object.assign(existingMeeting, updatedMeeting);\r\n        }\r\n      })\r\n      .addCase(deleteMeeting.fulfilled, (state, action) => {\r\n        state.meetings = state.meetings.filter((meeting) => meeting.id !== action.payload);\r\n      });\r\n  },\r\n});\r\n\r\nexport default meetingSlice.reducer;\r\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;;;AAEA,eAAe;AACf,MAAM,UAAU;AAGT,MAAM,gBAAgB,CAAA,GAAA,2LAAA,CAAA,mBAAgB,AAAD,EAAE,0BAA0B;IACtE,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC;IACjC,OAAO,SAAS,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAM,IAAI,KAAK,EAAE,IAAI,IAAI,IAAI,KAAK,EAAE,IAAI;AACxE;AAGO,MAAM,gBAAgB,CAAA,GAAA,2LAAA,CAAA,mBAAgB,AAAD,EAAE,0BAA0B,OAAO;IAC7E,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,SAAS;QAAE,GAAG,UAAU;QAAE,IAAI,KAAK,GAAG;IAAG;IAC3E,OAAO,SAAS,IAAI;AACtB;AAGO,MAAM,gBAAgB,CAAA,GAAA,2LAAA,CAAA,mBAAgB,AAAD,EAAE,0BAA0B,OAAO,EAAE,EAAE,EAAE,cAAc,EAAE;IACnG,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,EAAE,IAAI,EAAE;IACpC,OAAO;QAAE;QAAI;IAAe;AAC9B;AAGO,MAAM,gBAAgB,CAAA,GAAA,2LAAA,CAAA,mBAAgB,AAAD,EAAE,0BAA0B,OAAO;IAC7E,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC,EAAE,IAAI;IACrC,OAAO;AACT;AAEA,iBAAiB;AACjB,MAAM,eAAe,CAAA,GAAA,2LAAA,CAAA,cAAW,AAAD,EAAE;IAC/B,MAAM;IACN,cAAc;QACZ,UAAU,EAAE;QACZ,QAAQ;QACR,OAAO;IACT;IACA,UAAU,CAAC;IACX,eAAe,CAAC;QACd,QACG,OAAO,CAAC,cAAc,OAAO,EAAE,CAAC;YAC/B,MAAM,MAAM,GAAG;QACjB,GACC,OAAO,CAAC,cAAc,SAAS,EAAE,CAAC,OAAO;YACxC,MAAM,MAAM,GAAG;YACf,MAAM,QAAQ,GAAG,OAAO,OAAO;QACjC,GACC,OAAO,CAAC,cAAc,QAAQ,EAAE,CAAC,OAAO;YACvC,MAAM,MAAM,GAAG;YACf,MAAM,KAAK,GAAG,OAAO,KAAK,CAAC,OAAO;QACpC,GACC,OAAO,CAAC,cAAc,SAAS,EAAE,CAAC,OAAO;YACxC,MAAM,QAAQ,CAAC,OAAO,CAAC,OAAO,OAAO;QACvC,GACC,OAAO,CAAC,cAAc,SAAS,EAAE,CAAC,OAAO;YACxC,MAAM,EAAE,EAAE,EAAE,cAAc,EAAE,GAAG,OAAO,OAAO;YAC7C,MAAM,kBAAkB,MAAM,QAAQ,CAAC,IAAI,CAAC,CAAC,UAAY,QAAQ,EAAE,KAAK;YACxE,IAAI,iBAAiB;gBACnB,OAAO,MAAM,CAAC,iBAAiB;YACjC;QACF,GACC,OAAO,CAAC,cAAc,SAAS,EAAE,CAAC,OAAO;YACxC,MAAM,QAAQ,GAAG,MAAM,QAAQ,CAAC,MAAM,CAAC,CAAC,UAAY,QAAQ,EAAE,KAAK,OAAO,OAAO;QACnF;IACJ;AACF;uCAEe,aAAa,OAAO"}},
    {"offset": {"line": 344, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 350, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/dasch/Desktop/meetApp/client/src/features/store.js"],"sourcesContent":["// src/features/store.js\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport authReducer from './auth/authSlice';\r\nimport gridViewReducer from './gridViewSlice';\r\nimport noteReducer from './note/noteSlice';\r\nimport meetingReducer from './meeting/meetingSlice';\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: authReducer,\r\n    gridView: gridViewReducer,\r\n    note: noteReducer,\r\n    meeting: meetingReducer,\r\n  },\r\n});\r\n"],"names":[],"mappings":"AAAA,wBAAwB;;;;AAExB;AACA;AACA;AACA;AAJA;;;;;;AAKO,MAAM,QAAQ,CAAA,GAAA,2LAAA,CAAA,iBAAc,AAAD,EAAE;IAClC,SAAS;QACP,MAAM,oIAAA,CAAA,UAAW;QACjB,UAAU,gIAAA,CAAA,UAAe;QACzB,MAAM,oIAAA,CAAA,UAAW;QACjB,SAAS,0IAAA,CAAA,UAAc;IACzB;AACF"}},
    {"offset": {"line": 372, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 378, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/dasch/Desktop/meetApp/client/src/app/layout.js"],"sourcesContent":["// import { Geist, Geist_Mono } from \"next/font/google\";\r\n// import \"./globals.css\";\r\n\r\n// const geistSans = Geist({\r\n//   variable: \"--font-geist-sans\",\r\n//   subsets: [\"latin\"],\r\n// });\r\n\r\n// const geistMono = Geist_Mono({\r\n//   variable: \"--font-geist-mono\",\r\n//   subsets: [\"latin\"],\r\n// });\r\n\r\n// export const metadata = {\r\n//   title: \"Create Next App\",\r\n//   description: \"Generated by create next app\",\r\n// };\r\n\r\n// export default function RootLayout({ children }) {\r\n//   return (\r\n//     <html lang=\"en\">\r\n//       <body\r\n//         className={`${geistSans.variable} ${geistMono.variable} antialiased`}\r\n//       >\r\n//         {children}\r\n//       </body>\r\n//     </html>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\"use client\"\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { store } from '@/features/store';\r\nimport './globals.css';\r\n\r\nexport default function RootLayout({ children }) {\r\n  return (\r\n    <html lang=\"en\">\r\n      <body>\r\n        <Provider store={store}>\r\n          {children}\r\n        </Provider>\r\n      </body>\r\n    </html>\r\n  );\r\n}"],"names":[],"mappings":"AAAA,wDAAwD;AACxD,0BAA0B;AAE1B,4BAA4B;AAC5B,mCAAmC;AACnC,wBAAwB;AACxB,MAAM;AAEN,iCAAiC;AACjC,mCAAmC;AACnC,wBAAwB;AACxB,MAAM;AAEN,4BAA4B;AAC5B,8BAA8B;AAC9B,iDAAiD;AACjD,KAAK;AAEL,qDAAqD;AACrD,aAAa;AACb,uBAAuB;AACvB,cAAc;AACd,gFAAgF;AAChF,UAAU;AACV,qBAAqB;AACrB,gBAAgB;AAChB,cAAc;AACd,OAAO;AACP,IAAI;;;;;AAQJ;AADA;AAFA;;;;;AAMe,SAAS,WAAW,EAAE,QAAQ,EAAE;IAC7C,qBACE,8OAAC;QAAK,MAAK;kBACT,cAAA,8OAAC;sBACC,cAAA,8OAAC,yJAAA,CAAA,WAAQ;gBAAC,OAAO,wHAAA,CAAA,QAAK;0BACnB;;;;;;;;;;;;;;;;AAKX"}},
    {"offset": {"line": 437, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}